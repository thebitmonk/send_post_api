/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.ModelsProviderSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ModelsProviderSettings', function() {
    it('should create an instance of ModelsProviderSettings', function() {
      // uncomment below and update the code to test ModelsProviderSettings
      //var instance = new SendPostApi.ModelsProviderSettings();
      //expect(instance).to.be.a(SendPostApi.ModelsProviderSettings);
    });

    it('should have the property backOffConfiguration (base name: "backOffConfiguration")', function() {
      // uncomment below and update the code to test the property backOffConfiguration
      //var instance = new SendPostApi.ModelsProviderSettings();
      //expect(instance).to.be();
    });

    it('should have the property backOffTrigger (base name: "backOffTrigger")', function() {
      // uncomment below and update the code to test the property backOffTrigger
      //var instance = new SendPostApi.ModelsProviderSettings();
      //expect(instance).to.be();
    });

    it('should have the property maxConcurrentConnections (base name: "maxConcurrentConnections")', function() {
      // uncomment below and update the code to test the property maxConcurrentConnections
      //var instance = new SendPostApi.ModelsProviderSettings();
      //expect(instance).to.be();
    });

    it('should have the property maxSendPerDay (base name: "maxSendPerDay")', function() {
      // uncomment below and update the code to test the property maxSendPerDay
      //var instance = new SendPostApi.ModelsProviderSettings();
      //expect(instance).to.be();
    });

    it('should have the property maxSendPerHour (base name: "maxSendPerHour")', function() {
      // uncomment below and update the code to test the property maxSendPerHour
      //var instance = new SendPostApi.ModelsProviderSettings();
      //expect(instance).to.be();
    });

    it('should have the property maxSendPerMinute (base name: "maxSendPerMinute")', function() {
      // uncomment below and update the code to test the property maxSendPerMinute
      //var instance = new SendPostApi.ModelsProviderSettings();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SendPostApi.ModelsProviderSettings();
      //expect(instance).to.be();
    });

  });

}));
