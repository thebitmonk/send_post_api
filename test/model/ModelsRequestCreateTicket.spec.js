/*
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ModelsRequestCreateTicket', function() {
      beforeEach(function() {
        instance = new SendPostApi.ModelsRequestCreateTicket();
      });

      it('should create an instance of ModelsRequestCreateTicket', function() {
        // TODO: update the code to test ModelsRequestCreateTicket
        expect(instance).to.be.a(SendPostApi.ModelsRequestCreateTicket);
      });

      it('should have the property attachmentId (base name: "attachmentId")', function() {
        // TODO: update the code to test the property attachmentId
        expect(instance).to.have.property('attachmentId');
        // expect(instance.attachmentId).to.be(expectedValueLiteral);
      });

      it('should have the property attachmentUrl (base name: "attachmentUrl")', function() {
        // TODO: update the code to test the property attachmentUrl
        expect(instance).to.have.property('attachmentUrl');
        // expect(instance.attachmentUrl).to.be(expectedValueLiteral);
      });

      it('should have the property category (base name: "category")', function() {
        // TODO: update the code to test the property category
        expect(instance).to.have.property('category');
        // expect(instance.category).to.be(expectedValueLiteral);
      });

      it('should have the property content (base name: "content")', function() {
        // TODO: update the code to test the property content
        expect(instance).to.have.property('content');
        // expect(instance.content).to.be(expectedValueLiteral);
      });

      it('should have the property subject (base name: "subject")', function() {
        // TODO: update the code to test the property subject
        expect(instance).to.have.property('subject');
        // expect(instance.subject).to.be(expectedValueLiteral);
      });

    });
  });

}));
