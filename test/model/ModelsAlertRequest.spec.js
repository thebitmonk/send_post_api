/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.ModelsAlertRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ModelsAlertRequest', function() {
    it('should create an instance of ModelsAlertRequest', function() {
      // uncomment below and update the code to test ModelsAlertRequest
      //var instance = new SendPostApi.ModelsAlertRequest();
      //expect(instance).to.be.a(SendPostApi.ModelsAlertRequest);
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new SendPostApi.ModelsAlertRequest();
      //expect(instance).to.be();
    });

    it('should have the property emails (base name: "emails")', function() {
      // uncomment below and update the code to test the property emails
      //var instance = new SendPostApi.ModelsAlertRequest();
      //expect(instance).to.be();
    });

    it('should have the property entityType (base name: "entityType")', function() {
      // uncomment below and update the code to test the property entityType
      //var instance = new SendPostApi.ModelsAlertRequest();
      //expect(instance).to.be();
    });

    it('should have the property entityValue (base name: "entityValue")', function() {
      // uncomment below and update the code to test the property entityValue
      //var instance = new SendPostApi.ModelsAlertRequest();
      //expect(instance).to.be();
    });

    it('should have the property label (base name: "label")', function() {
      // uncomment below and update the code to test the property label
      //var instance = new SendPostApi.ModelsAlertRequest();
      //expect(instance).to.be();
    });

    it('should have the property member (base name: "member")', function() {
      // uncomment below and update the code to test the property member
      //var instance = new SendPostApi.ModelsAlertRequest();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SendPostApi.ModelsAlertRequest();
      //expect(instance).to.be();
    });

    it('should have the property notificationType (base name: "notificationType")', function() {
      // uncomment below and update the code to test the property notificationType
      //var instance = new SendPostApi.ModelsAlertRequest();
      //expect(instance).to.be();
    });

    it('should have the property parameter (base name: "parameter")', function() {
      // uncomment below and update the code to test the property parameter
      //var instance = new SendPostApi.ModelsAlertRequest();
      //expect(instance).to.be();
    });

    it('should have the property processedCountThreshold (base name: "processedCountThreshold")', function() {
      // uncomment below and update the code to test the property processedCountThreshold
      //var instance = new SendPostApi.ModelsAlertRequest();
      //expect(instance).to.be();
    });

    it('should have the property provider (base name: "provider")', function() {
      // uncomment below and update the code to test the property provider
      //var instance = new SendPostApi.ModelsAlertRequest();
      //expect(instance).to.be();
    });

    it('should have the property slackUrl (base name: "slackUrl")', function() {
      // uncomment below and update the code to test the property slackUrl
      //var instance = new SendPostApi.ModelsAlertRequest();
      //expect(instance).to.be();
    });

    it('should have the property threshold (base name: "threshold")', function() {
      // uncomment below and update the code to test the property threshold
      //var instance = new SendPostApi.ModelsAlertRequest();
      //expect(instance).to.be();
    });

  });

}));
