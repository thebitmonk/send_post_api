/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.ModelsBlackListResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ModelsBlackListResult', function() {
    it('should create an instance of ModelsBlackListResult', function() {
      // uncomment below and update the code to test ModelsBlackListResult
      //var instance = new SendPostApi.ModelsBlackListResult();
      //expect(instance).to.be.a(SendPostApi.ModelsBlackListResult);
    });

    it('should have the property alexaTop100k (base name: "alexaTop100k")', function() {
      // uncomment below and update the code to test the property alexaTop100k
      //var instance = new SendPostApi.ModelsBlackListResult();
      //expect(instance).to.be();
    });

    it('should have the property alexaTop10k (base name: "alexaTop10k")', function() {
      // uncomment below and update the code to test the property alexaTop10k
      //var instance = new SendPostApi.ModelsBlackListResult();
      //expect(instance).to.be();
    });

    it('should have the property alexaTop250k (base name: "alexaTop250k")', function() {
      // uncomment below and update the code to test the property alexaTop250k
      //var instance = new SendPostApi.ModelsBlackListResult();
      //expect(instance).to.be();
    });

    it('should have the property blackLists (base name: "blackLists")', function() {
      // uncomment below and update the code to test the property blackLists
      //var instance = new SendPostApi.ModelsBlackListResult();
      //expect(instance).to.be();
    });

    it('should have the property domainLength (base name: "domainLength")', function() {
      // uncomment below and update the code to test the property domainLength
      //var instance = new SendPostApi.ModelsBlackListResult();
      //expect(instance).to.be();
    });

    it('should have the property host (base name: "host")', function() {
      // uncomment below and update the code to test the property host
      //var instance = new SendPostApi.ModelsBlackListResult();
      //expect(instance).to.be();
    });

    it('should have the property mostAbusedTld (base name: "mostAbusedTld")', function() {
      // uncomment below and update the code to test the property mostAbusedTld
      //var instance = new SendPostApi.ModelsBlackListResult();
      //expect(instance).to.be();
    });

  });

}));
