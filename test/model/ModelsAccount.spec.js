/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.ModelsAccount();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ModelsAccount', function() {
    it('should create an instance of ModelsAccount', function() {
      // uncomment below and update the code to test ModelsAccount
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be.a(SendPostApi.ModelsAccount);
    });

    it('should have the property alertSlackEndpoint (base name: "alertSlackEndpoint")', function() {
      // uncomment below and update the code to test the property alertSlackEndpoint
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property apiKey (base name: "apiKey")', function() {
      // uncomment below and update the code to test the property apiKey
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property brandColor (base name: "brandColor")', function() {
      // uncomment below and update the code to test the property brandColor
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property companyName (base name: "companyName")', function() {
      // uncomment below and update the code to test the property companyName
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property currentEmailServiceProvider (base name: "currentEmailServiceProvider")', function() {
      // uncomment below and update the code to test the property currentEmailServiceProvider
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property incidentSlackEndpoint (base name: "incidentSlackEndpoint")', function() {
      // uncomment below and update the code to test the property incidentSlackEndpoint
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property industry (base name: "industry")', function() {
      // uncomment below and update the code to test the property industry
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property isAdmin (base name: "isAdmin")', function() {
      // uncomment below and update the code to test the property isAdmin
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property isCanceled (base name: "isCanceled")', function() {
      // uncomment below and update the code to test the property isCanceled
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property isLastPaymentFailed (base name: "isLastPaymentFailed")', function() {
      // uncomment below and update the code to test the property isLastPaymentFailed
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property isUpgraded (base name: "isUpgraded")', function() {
      // uncomment below and update the code to test the property isUpgraded
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property lockThreshold (base name: "lockThreshold")', function() {
      // uncomment below and update the code to test the property lockThreshold
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property locked (base name: "locked")', function() {
      // uncomment below and update the code to test the property locked
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property logoURL (base name: "logoURL")', function() {
      // uncomment below and update the code to test the property logoURL
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property onboardCFinished (base name: "onboardCFinished")', function() {
      // uncomment below and update the code to test the property onboardCFinished
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property onboardQAnswered (base name: "onboardQAnswered")', function() {
      // uncomment below and update the code to test the property onboardQAnswered
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property sendingVolumePerMonth (base name: "sendingVolumePerMonth")', function() {
      // uncomment below and update the code to test the property sendingVolumePerMonth
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property slackToken (base name: "slackToken")', function() {
      // uncomment below and update the code to test the property slackToken
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property stripeBasePriceId (base name: "stripeBasePriceId")', function() {
      // uncomment below and update the code to test the property stripeBasePriceId
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property stripeSubscriptionItemId (base name: "stripeSubscriptionItemId")', function() {
      // uncomment below and update the code to test the property stripeSubscriptionItemId
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property stripeUsagePriceId (base name: "stripeUsagePriceId")', function() {
      // uncomment below and update the code to test the property stripeUsagePriceId
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

    it('should have the property switchingSendpostDescription (base name: "switchingSendpostDescription")', function() {
      // uncomment below and update the code to test the property switchingSendpostDescription
      //var instance = new SendPostApi.ModelsAccount();
      //expect(instance).to.be();
    });

  });

}));
