/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.ModelsEditorTokenResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ModelsEditorTokenResponse', function() {
    it('should create an instance of ModelsEditorTokenResponse', function() {
      // uncomment below and update the code to test ModelsEditorTokenResponse
      //var instance = new SendPostApi.ModelsEditorTokenResponse();
      //expect(instance).to.be.a(SendPostApi.ModelsEditorTokenResponse);
    });

    it('should have the property expires (base name: ".expires")', function() {
      // uncomment below and update the code to test the property expires
      //var instance = new SendPostApi.ModelsEditorTokenResponse();
      //expect(instance).to.be();
    });

    it('should have the property issued (base name: ".issued")', function() {
      // uncomment below and update the code to test the property issued
      //var instance = new SendPostApi.ModelsEditorTokenResponse();
      //expect(instance).to.be();
    });

    it('should have the property accessToken (base name: "access_token")', function() {
      // uncomment below and update the code to test the property accessToken
      //var instance = new SendPostApi.ModelsEditorTokenResponse();
      //expect(instance).to.be();
    });

    it('should have the property asclientId (base name: "as:client_id")', function() {
      // uncomment below and update the code to test the property asclientId
      //var instance = new SendPostApi.ModelsEditorTokenResponse();
      //expect(instance).to.be();
    });

    it('should have the property asregion (base name: "as:region")', function() {
      // uncomment below and update the code to test the property asregion
      //var instance = new SendPostApi.ModelsEditorTokenResponse();
      //expect(instance).to.be();
    });

    it('should have the property expiresIn (base name: "expires_in")', function() {
      // uncomment below and update the code to test the property expiresIn
      //var instance = new SendPostApi.ModelsEditorTokenResponse();
      //expect(instance).to.be();
    });

    it('should have the property refreshToken (base name: "refresh_token")', function() {
      // uncomment below and update the code to test the property refreshToken
      //var instance = new SendPostApi.ModelsEditorTokenResponse();
      //expect(instance).to.be();
    });

    it('should have the property tokenType (base name: "token_type")', function() {
      // uncomment below and update the code to test the property tokenType
      //var instance = new SendPostApi.ModelsEditorTokenResponse();
      //expect(instance).to.be();
    });

    it('should have the property userName (base name: "userName")', function() {
      // uncomment below and update the code to test the property userName
      //var instance = new SendPostApi.ModelsEditorTokenResponse();
      //expect(instance).to.be();
    });

  });

}));
