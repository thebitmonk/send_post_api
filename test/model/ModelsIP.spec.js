/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.ModelsIP();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ModelsIP', function() {
    it('should create an instance of ModelsIP', function() {
      // uncomment below and update the code to test ModelsIP
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be.a(SendPostApi.ModelsIP);
    });

    it('should have the property aolSettings (base name: "aolSettings")', function() {
      // uncomment below and update the code to test the property aolSettings
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property attSettings (base name: "attSettings")', function() {
      // uncomment below and update the code to test the property attSettings
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property autoWarmupEnabled (base name: "autoWarmupEnabled")', function() {
      // uncomment below and update the code to test the property autoWarmupEnabled
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property comcastSettings (base name: "comcastSettings")', function() {
      // uncomment below and update the code to test the property comcastSettings
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property defaultSettings (base name: "defaultSettings")', function() {
      // uncomment below and update the code to test the property defaultSettings
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property gmailSettings (base name: "gmailSettings")', function() {
      // uncomment below and update the code to test the property gmailSettings
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property gmxSettings (base name: "gmxSettings")', function() {
      // uncomment below and update the code to test the property gmxSettings
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property icloudSettings (base name: "icloudSettings")', function() {
      // uncomment below and update the code to test the property icloudSettings
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property infraClassification (base name: "infraClassification")', function() {
      // uncomment below and update the code to test the property infraClassification
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property infraMonitor (base name: "infraMonitor")', function() {
      // uncomment below and update the code to test the property infraMonitor
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property ipDomainWarmupStatus (base name: "ipDomainWarmupStatus")', function() {
      // uncomment below and update the code to test the property ipDomainWarmupStatus
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property mailruSettings (base name: "mailruSettings")', function() {
      // uncomment below and update the code to test the property mailruSettings
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property microsoftSettings (base name: "microsoftSettings")', function() {
      // uncomment below and update the code to test the property microsoftSettings
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property publicIP (base name: "publicIP")', function() {
      // uncomment below and update the code to test the property publicIP
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property qqSettings (base name: "qqSettings")', function() {
      // uncomment below and update the code to test the property qqSettings
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property reverseDNSHostname (base name: "reverseDNSHostname")', function() {
      // uncomment below and update the code to test the property reverseDNSHostname
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property systemDomain (base name: "systemDomain")', function() {
      // uncomment below and update the code to test the property systemDomain
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property yahooSettings (base name: "yahooSettings")', function() {
      // uncomment below and update the code to test the property yahooSettings
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property yandexSettings (base name: "yandexSettings")', function() {
      // uncomment below and update the code to test the property yandexSettings
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

    it('should have the property zohoSettings (base name: "zohoSettings")', function() {
      // uncomment below and update the code to test the property zohoSettings
      //var instance = new SendPostApi.ModelsIP();
      //expect(instance).to.be();
    });

  });

}));
