/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.ModelsBlacklistResource();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ModelsBlacklistResource', function() {
    it('should create an instance of ModelsBlacklistResource', function() {
      // uncomment below and update the code to test ModelsBlacklistResource
      //var instance = new SendPostApi.ModelsBlacklistResource();
      //expect(instance).to.be.a(SendPostApi.ModelsBlacklistResource);
    });

    it('should have the property addDate (base name: "Add_Date")', function() {
      // uncomment below and update the code to test the property addDate
      //var instance = new SendPostApi.ModelsBlacklistResource();
      //expect(instance).to.be();
    });

    it('should have the property blacklistedCount (base name: "Blacklisted_Count")', function() {
      // uncomment below and update the code to test the property blacklistedCount
      //var instance = new SendPostApi.ModelsBlacklistResource();
      //expect(instance).to.be();
    });

    it('should have the property blacklistedOn (base name: "Blacklisted_On")', function() {
      // uncomment below and update the code to test the property blacklistedOn
      //var instance = new SendPostApi.ModelsBlacklistResource();
      //expect(instance).to.be();
    });

    it('should have the property contactListID (base name: "Contact_List_ID")', function() {
      // uncomment below and update the code to test the property contactListID
      //var instance = new SendPostApi.ModelsBlacklistResource();
      //expect(instance).to.be();
    });

    it('should have the property ID (base name: "ID")', function() {
      // uncomment below and update the code to test the property ID
      //var instance = new SendPostApi.ModelsBlacklistResource();
      //expect(instance).to.be();
    });

    it('should have the property label (base name: "Label")', function() {
      // uncomment below and update the code to test the property label
      //var instance = new SendPostApi.ModelsBlacklistResource();
      //expect(instance).to.be();
    });

    it('should have the property lastCheck (base name: "Last_Check")', function() {
      // uncomment below and update the code to test the property lastCheck
      //var instance = new SendPostApi.ModelsBlacklistResource();
      //expect(instance).to.be();
    });

    it('should have the property links (base name: "Links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new SendPostApi.ModelsBlacklistResource();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new SendPostApi.ModelsBlacklistResource();
      //expect(instance).to.be();
    });

    it('should have the property target (base name: "Target")', function() {
      // uncomment below and update the code to test the property target
      //var instance = new SendPostApi.ModelsBlacklistResource();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new SendPostApi.ModelsBlacklistResource();
      //expect(instance).to.be();
    });

  });

}));
