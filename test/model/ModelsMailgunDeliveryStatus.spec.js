/*
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.41
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ModelsMailgunDeliveryStatus', function() {
      beforeEach(function() {
        instance = new SendPostApi.ModelsMailgunDeliveryStatus();
      });

      it('should create an instance of ModelsMailgunDeliveryStatus', function() {
        // TODO: update the code to test ModelsMailgunDeliveryStatus
        expect(instance).to.be.a(SendPostApi.ModelsMailgunDeliveryStatus);
      });

      it('should have the property attemptNo (base name: "attempt-no")', function() {
        // TODO: update the code to test the property attemptNo
        expect(instance).to.have.property('attemptNo');
        // expect(instance.attemptNo).to.be(expectedValueLiteral);
      });

      it('should have the property certificateVerified (base name: "certificate-verified")', function() {
        // TODO: update the code to test the property certificateVerified
        expect(instance).to.have.property('certificateVerified');
        // expect(instance.certificateVerified).to.be(expectedValueLiteral);
      });

      it('should have the property code (base name: "code")', function() {
        // TODO: update the code to test the property code
        expect(instance).to.have.property('code');
        // expect(instance.code).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property message (base name: "message")', function() {
        // TODO: update the code to test the property message
        expect(instance).to.have.property('message');
        // expect(instance.message).to.be(expectedValueLiteral);
      });

      it('should have the property mxHost (base name: "mx-host")', function() {
        // TODO: update the code to test the property mxHost
        expect(instance).to.have.property('mxHost');
        // expect(instance.mxHost).to.be(expectedValueLiteral);
      });

      it('should have the property sessionSeconds (base name: "sessionSeconds")', function() {
        // TODO: update the code to test the property sessionSeconds
        expect(instance).to.have.property('sessionSeconds');
        // expect(instance.sessionSeconds).to.be(expectedValueLiteral);
      });

      it('should have the property tls (base name: "tls")', function() {
        // TODO: update the code to test the property tls
        expect(instance).to.have.property('tls');
        // expect(instance.tls).to.be(expectedValueLiteral);
      });

    });
  });

}));
