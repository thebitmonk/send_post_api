/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.ModelsSendgridEvent();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ModelsSendgridEvent', function() {
    it('should create an instance of ModelsSendgridEvent', function() {
      // uncomment below and update the code to test ModelsSendgridEvent
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be.a(SendPostApi.ModelsSendgridEvent);
    });

    it('should have the property accountId (base name: "accountId")', function() {
      // uncomment below and update the code to test the property accountId
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

    it('should have the property emailType (base name: "emailType")', function() {
      // uncomment below and update the code to test the property emailType
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

    it('should have the property event (base name: "event")', function() {
      // uncomment below and update the code to test the property event
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

    it('should have the property ip (base name: "ip")', function() {
      // uncomment below and update the code to test the property ip
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

    it('should have the property messageId (base name: "messageId")', function() {
      // uncomment below and update the code to test the property messageId
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

    it('should have the property reason (base name: "reason")', function() {
      // uncomment below and update the code to test the property reason
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

    it('should have the property sgMessageId (base name: "sg_message_id")', function() {
      // uncomment below and update the code to test the property sgMessageId
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

    it('should have the property smtpId (base name: "smtp-id")', function() {
      // uncomment below and update the code to test the property smtpId
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

    it('should have the property subAccountId (base name: "subAccountId")', function() {
      // uncomment below and update the code to test the property subAccountId
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

    it('should have the property tpspId (base name: "tpspId")', function() {
      // uncomment below and update the code to test the property tpspId
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

    it('should have the property userAgent (base name: "userAgent")', function() {
      // uncomment below and update the code to test the property userAgent
      //var instance = new SendPostApi.ModelsSendgridEvent();
      //expect(instance).to.be();
    });

  });

}));
