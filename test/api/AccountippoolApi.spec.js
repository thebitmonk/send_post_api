/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.AccountIppoolApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountIppoolApi', function() {
    describe('accountIPPoolRouterCount', function() {
      it('should call accountIPPoolRouterCount successfully', function(done) {
        //uncomment below and update the code to test accountIPPoolRouterCount
        //instance.accountIPPoolRouterCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountIPPoolRouterCreate', function() {
      it('should call accountIPPoolRouterCreate successfully', function(done) {
        //uncomment below and update the code to test accountIPPoolRouterCreate
        //instance.accountIPPoolRouterCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountIPPoolRouterDelete', function() {
      it('should call accountIPPoolRouterDelete successfully', function(done) {
        //uncomment below and update the code to test accountIPPoolRouterDelete
        //instance.accountIPPoolRouterDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountIPPoolRouterGet', function() {
      it('should call accountIPPoolRouterGet successfully', function(done) {
        //uncomment below and update the code to test accountIPPoolRouterGet
        //instance.accountIPPoolRouterGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountIPPoolRouterGetAll', function() {
      it('should call accountIPPoolRouterGetAll successfully', function(done) {
        //uncomment below and update the code to test accountIPPoolRouterGetAll
        //instance.accountIPPoolRouterGetAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountIPPoolRouterSearchAll', function() {
      it('should call accountIPPoolRouterSearchAll successfully', function(done) {
        //uncomment below and update the code to test accountIPPoolRouterSearchAll
        //instance.accountIPPoolRouterSearchAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountIPPoolRouterUpdate', function() {
      it('should call accountIPPoolRouterUpdate successfully', function(done) {
        //uncomment below and update the code to test accountIPPoolRouterUpdate
        //instance.accountIPPoolRouterUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
