/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.AccountIntegrationApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountIntegrationApi', function() {
    describe('accountIntegrationRouterCount', function() {
      it('should call accountIntegrationRouterCount successfully', function(done) {
        //uncomment below and update the code to test accountIntegrationRouterCount
        //instance.accountIntegrationRouterCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountIntegrationRouterCreate', function() {
      it('should call accountIntegrationRouterCreate successfully', function(done) {
        //uncomment below and update the code to test accountIntegrationRouterCreate
        //instance.accountIntegrationRouterCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountIntegrationRouterDelete', function() {
      it('should call accountIntegrationRouterDelete successfully', function(done) {
        //uncomment below and update the code to test accountIntegrationRouterDelete
        //instance.accountIntegrationRouterDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountIntegrationRouterDisableHetrixToolsIPMonitoring', function() {
      it('should call accountIntegrationRouterDisableHetrixToolsIPMonitoring successfully', function(done) {
        //uncomment below and update the code to test accountIntegrationRouterDisableHetrixToolsIPMonitoring
        //instance.accountIntegrationRouterDisableHetrixToolsIPMonitoring(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountIntegrationRouterEnableHetrixToolsIPMonitoring', function() {
      it('should call accountIntegrationRouterEnableHetrixToolsIPMonitoring successfully', function(done) {
        //uncomment below and update the code to test accountIntegrationRouterEnableHetrixToolsIPMonitoring
        //instance.accountIntegrationRouterEnableHetrixToolsIPMonitoring(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountIntegrationRouterGetAll', function() {
      it('should call accountIntegrationRouterGetAll successfully', function(done) {
        //uncomment below and update the code to test accountIntegrationRouterGetAll
        //instance.accountIntegrationRouterGetAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountIntegrationRouterGetMonitoredIPStats', function() {
      it('should call accountIntegrationRouterGetMonitoredIPStats successfully', function(done) {
        //uncomment below and update the code to test accountIntegrationRouterGetMonitoredIPStats
        //instance.accountIntegrationRouterGetMonitoredIPStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountIntegrationRouterUpdate', function() {
      it('should call accountIntegrationRouterUpdate successfully', function(done) {
        //uncomment below and update the code to test accountIntegrationRouterUpdate
        //instance.accountIntegrationRouterUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
