/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.ClusterApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ClusterApi', function() {
    describe('clusterRouterAddItemsToSuppressionFilterOfEveryNodeInCluster', function() {
      it('should call clusterRouterAddItemsToSuppressionFilterOfEveryNodeInCluster successfully', function(done) {
        //uncomment below and update the code to test clusterRouterAddItemsToSuppressionFilterOfEveryNodeInCluster
        //instance.clusterRouterAddItemsToSuppressionFilterOfEveryNodeInCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clusterRouterDeleteItemFromCacheOfEveryNodeInCluster', function() {
      it('should call clusterRouterDeleteItemFromCacheOfEveryNodeInCluster successfully', function(done) {
        //uncomment below and update the code to test clusterRouterDeleteItemFromCacheOfEveryNodeInCluster
        //instance.clusterRouterDeleteItemFromCacheOfEveryNodeInCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clusterRouterDeleteItemsFromSuppressionFilterOfEveryNodeInCluster', function() {
      it('should call clusterRouterDeleteItemsFromSuppressionFilterOfEveryNodeInCluster successfully', function(done) {
        //uncomment below and update the code to test clusterRouterDeleteItemsFromSuppressionFilterOfEveryNodeInCluster
        //instance.clusterRouterDeleteItemsFromSuppressionFilterOfEveryNodeInCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clusterRouterGetItemFromCacheOfEveryNodeInCluster', function() {
      it('should call clusterRouterGetItemFromCacheOfEveryNodeInCluster successfully', function(done) {
        //uncomment below and update the code to test clusterRouterGetItemFromCacheOfEveryNodeInCluster
        //instance.clusterRouterGetItemFromCacheOfEveryNodeInCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clusterRouterGetItemFromCacheOfSpecificNodeInCluster', function() {
      it('should call clusterRouterGetItemFromCacheOfSpecificNodeInCluster successfully', function(done) {
        //uncomment below and update the code to test clusterRouterGetItemFromCacheOfSpecificNodeInCluster
        //instance.clusterRouterGetItemFromCacheOfSpecificNodeInCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clusterRouterGetItemFromCacheOfSpecificNodeInCluster_0', function() {
      it('should call clusterRouterGetItemFromCacheOfSpecificNodeInCluster_0 successfully', function(done) {
        //uncomment below and update the code to test clusterRouterGetItemFromCacheOfSpecificNodeInCluster_0
        //instance.clusterRouterGetItemFromCacheOfSpecificNodeInCluster_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
