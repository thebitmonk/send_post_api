/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.AccountWebhookApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountWebhookApi', function() {
    describe('accountWebhookRouterCount', function() {
      it('should call accountWebhookRouterCount successfully', function(done) {
        //uncomment below and update the code to test accountWebhookRouterCount
        //instance.accountWebhookRouterCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountWebhookRouterCreate', function() {
      it('should call accountWebhookRouterCreate successfully', function(done) {
        //uncomment below and update the code to test accountWebhookRouterCreate
        //instance.accountWebhookRouterCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountWebhookRouterDelete', function() {
      it('should call accountWebhookRouterDelete successfully', function(done) {
        //uncomment below and update the code to test accountWebhookRouterDelete
        //instance.accountWebhookRouterDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountWebhookRouterGet', function() {
      it('should call accountWebhookRouterGet successfully', function(done) {
        //uncomment below and update the code to test accountWebhookRouterGet
        //instance.accountWebhookRouterGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountWebhookRouterGetAll', function() {
      it('should call accountWebhookRouterGetAll successfully', function(done) {
        //uncomment below and update the code to test accountWebhookRouterGetAll
        //instance.accountWebhookRouterGetAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountWebhookRouterUpdate', function() {
      it('should call accountWebhookRouterUpdate successfully', function(done) {
        //uncomment below and update the code to test accountWebhookRouterUpdate
        //instance.accountWebhookRouterUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
