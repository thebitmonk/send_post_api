/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.AccountLabelApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountLabelApi', function() {
    describe('labelRouterCount', function() {
      it('should call labelRouterCount successfully', function(done) {
        //uncomment below and update the code to test labelRouterCount
        //instance.labelRouterCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('labelRouterCreate', function() {
      it('should call labelRouterCreate successfully', function(done) {
        //uncomment below and update the code to test labelRouterCreate
        //instance.labelRouterCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('labelRouterDelete', function() {
      it('should call labelRouterDelete successfully', function(done) {
        //uncomment below and update the code to test labelRouterDelete
        //instance.labelRouterDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('labelRouterGet', function() {
      it('should call labelRouterGet successfully', function(done) {
        //uncomment below and update the code to test labelRouterGet
        //instance.labelRouterGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('labelRouterGetAll', function() {
      it('should call labelRouterGetAll successfully', function(done) {
        //uncomment below and update the code to test labelRouterGetAll
        //instance.labelRouterGetAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('labelRouterUpdate', function() {
      it('should call labelRouterUpdate successfully', function(done) {
        //uncomment below and update the code to test labelRouterUpdate
        //instance.labelRouterUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
