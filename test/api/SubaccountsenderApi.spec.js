/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.SubaccountSenderApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SubaccountSenderApi', function() {
    describe('senderRouterCount', function() {
      it('should call senderRouterCount successfully', function(done) {
        //uncomment below and update the code to test senderRouterCount
        //instance.senderRouterCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('senderRouterCreate', function() {
      it('should call senderRouterCreate successfully', function(done) {
        //uncomment below and update the code to test senderRouterCreate
        //instance.senderRouterCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('senderRouterDelete', function() {
      it('should call senderRouterDelete successfully', function(done) {
        //uncomment below and update the code to test senderRouterDelete
        //instance.senderRouterDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('senderRouterGet', function() {
      it('should call senderRouterGet successfully', function(done) {
        //uncomment below and update the code to test senderRouterGet
        //instance.senderRouterGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('senderRouterGetAll', function() {
      it('should call senderRouterGetAll successfully', function(done) {
        //uncomment below and update the code to test senderRouterGetAll
        //instance.senderRouterGetAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('senderRouterUpdate', function() {
      it('should call senderRouterUpdate successfully', function(done) {
        //uncomment below and update the code to test senderRouterUpdate
        //instance.senderRouterUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
