/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.SubaccountDomainApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SubaccountDomainApi', function() {
    describe('domainRouterCount', function() {
      it('should call domainRouterCount successfully', function(done) {
        //uncomment below and update the code to test domainRouterCount
        //instance.domainRouterCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('domainRouterCreate', function() {
      it('should call domainRouterCreate successfully', function(done) {
        //uncomment below and update the code to test domainRouterCreate
        //instance.domainRouterCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('domainRouterDelete', function() {
      it('should call domainRouterDelete successfully', function(done) {
        //uncomment below and update the code to test domainRouterDelete
        //instance.domainRouterDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('domainRouterGet', function() {
      it('should call domainRouterGet successfully', function(done) {
        //uncomment below and update the code to test domainRouterGet
        //instance.domainRouterGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('domainRouterGetAll', function() {
      it('should call domainRouterGetAll successfully', function(done) {
        //uncomment below and update the code to test domainRouterGetAll
        //instance.domainRouterGetAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('domainRouterUpdate', function() {
      it('should call domainRouterUpdate successfully', function(done) {
        //uncomment below and update the code to test domainRouterUpdate
        //instance.domainRouterUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('domainRouterVerify', function() {
      it('should call domainRouterVerify successfully', function(done) {
        //uncomment below and update the code to test domainRouterVerify
        //instance.domainRouterVerify(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('domainRouterVerifyByToken', function() {
      it('should call domainRouterVerifyByToken successfully', function(done) {
        //uncomment below and update the code to test domainRouterVerifyByToken
        //instance.domainRouterVerifyByToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('domainRouterVerifyRequest', function() {
      it('should call domainRouterVerifyRequest successfully', function(done) {
        //uncomment below and update the code to test domainRouterVerifyRequest
        //instance.domainRouterVerifyRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
