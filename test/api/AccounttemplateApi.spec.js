/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.AccountTemplateApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountTemplateApi', function() {
    describe('accountTemplateRouterCopy', function() {
      it('should call accountTemplateRouterCopy successfully', function(done) {
        //uncomment below and update the code to test accountTemplateRouterCopy
        //instance.accountTemplateRouterCopy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountTemplateRouterCount', function() {
      it('should call accountTemplateRouterCount successfully', function(done) {
        //uncomment below and update the code to test accountTemplateRouterCount
        //instance.accountTemplateRouterCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountTemplateRouterCreate', function() {
      it('should call accountTemplateRouterCreate successfully', function(done) {
        //uncomment below and update the code to test accountTemplateRouterCreate
        //instance.accountTemplateRouterCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountTemplateRouterDelete', function() {
      it('should call accountTemplateRouterDelete successfully', function(done) {
        //uncomment below and update the code to test accountTemplateRouterDelete
        //instance.accountTemplateRouterDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountTemplateRouterGet', function() {
      it('should call accountTemplateRouterGet successfully', function(done) {
        //uncomment below and update the code to test accountTemplateRouterGet
        //instance.accountTemplateRouterGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountTemplateRouterGetAll', function() {
      it('should call accountTemplateRouterGetAll successfully', function(done) {
        //uncomment below and update the code to test accountTemplateRouterGetAll
        //instance.accountTemplateRouterGetAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountTemplateRouterUpdate', function() {
      it('should call accountTemplateRouterUpdate successfully', function(done) {
        //uncomment below and update the code to test accountTemplateRouterUpdate
        //instance.accountTemplateRouterUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
