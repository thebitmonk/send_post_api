/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.AccountDomainStatApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountDomainStatApi', function() {
    describe('domainStatRouterGetAllAggregateDomainStatsByGroup', function() {
      it('should call domainStatRouterGetAllAggregateDomainStatsByGroup successfully', function(done) {
        //uncomment below and update the code to test domainStatRouterGetAllAggregateDomainStatsByGroup
        //instance.domainStatRouterGetAllAggregateDomainStatsByGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('domainStatRouterGetAllAggregatedProviderStatsForADomain', function() {
      it('should call domainStatRouterGetAllAggregatedProviderStatsForADomain successfully', function(done) {
        //uncomment below and update the code to test domainStatRouterGetAllAggregatedProviderStatsForADomain
        //instance.domainStatRouterGetAllAggregatedProviderStatsForADomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('domainStatRouterGetAllAggregatedProviderStatsForASpecificSubAccountOfADomain', function() {
      it('should call domainStatRouterGetAllAggregatedProviderStatsForASpecificSubAccountOfADomain successfully', function(done) {
        //uncomment below and update the code to test domainStatRouterGetAllAggregatedProviderStatsForASpecificSubAccountOfADomain
        //instance.domainStatRouterGetAllAggregatedProviderStatsForASpecificSubAccountOfADomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('domainStatRouterGetAllAggregatedSubAccountStatsForAnDomain', function() {
      it('should call domainStatRouterGetAllAggregatedSubAccountStatsForAnDomain successfully', function(done) {
        //uncomment below and update the code to test domainStatRouterGetAllAggregatedSubAccountStatsForAnDomain
        //instance.domainStatRouterGetAllAggregatedSubAccountStatsForAnDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('domainStatRouterGetAllDomainStats', function() {
      it('should call domainStatRouterGetAllDomainStats successfully', function(done) {
        //uncomment below and update the code to test domainStatRouterGetAllDomainStats
        //instance.domainStatRouterGetAllDomainStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('domainStatRouterGetCurrentDomainBlacklistStats', function() {
      it('should call domainStatRouterGetCurrentDomainBlacklistStats successfully', function(done) {
        //uncomment below and update the code to test domainStatRouterGetCurrentDomainBlacklistStats
        //instance.domainStatRouterGetCurrentDomainBlacklistStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('domainStatRouterGetCurrentDomainPostmasterStats', function() {
      it('should call domainStatRouterGetCurrentDomainPostmasterStats successfully', function(done) {
        //uncomment below and update the code to test domainStatRouterGetCurrentDomainPostmasterStats
        //instance.domainStatRouterGetCurrentDomainPostmasterStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('domainStatRouterGetStatsForASingleDomainStats', function() {
      it('should call domainStatRouterGetStatsForASingleDomainStats successfully', function(done) {
        //uncomment below and update the code to test domainStatRouterGetStatsForASingleDomainStats
        //instance.domainStatRouterGetStatsForASingleDomainStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
