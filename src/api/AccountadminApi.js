/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ModelsRAssumeAccount from '../model/ModelsRAssumeAccount';

/**
* AccountAdmin service.
* @module api/AccountAdminApi
* @version 1.0.0
*/
export default class AccountAdminApi {

    /**
    * Constructs a new AccountAdminApi. 
    * @alias module:api/AccountAdminApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the accountAdminRouterAssumeAccountGetToken operation.
     * @callback module:api/AccountAdminApi~accountAdminRouterAssumeAccountGetTokenCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsRAssumeAccount} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Responds back with a custom token for frontend to start login using firebase sdk
     * @param {String} xAccountApiKey Account API Key
     * @param {String} email email
     * @param {Object} opts Optional parameters
     * @param {String} [uid] firebase uid if you have
     * @param {module:api/AccountAdminApi~accountAdminRouterAssumeAccountGetTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsRAssumeAccount}
     */
    accountAdminRouterAssumeAccountGetToken(xAccountApiKey, email, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling accountAdminRouterAssumeAccountGetToken");
      }
      // verify the required parameter 'email' is set
      if (email === undefined || email === null) {
        throw new Error("Missing the required parameter 'email' when calling accountAdminRouterAssumeAccountGetToken");
      }

      let pathParams = {
      };
      let queryParams = {
        'email': email,
        'uid': opts['uid']
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelsRAssumeAccount;
      return this.apiClient.callApi(
        '/account/admin/assume', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
