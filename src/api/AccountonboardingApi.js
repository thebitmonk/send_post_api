/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ModelsAccountUnlockTicket from '../model/ModelsAccountUnlockTicket';
import ModelsOnboardingChecklist from '../model/ModelsOnboardingChecklist';

/**
* AccountOnboarding service.
* @module api/AccountOnboardingApi
* @version 1.0.0
*/
export default class AccountOnboardingApi {

    /**
    * Constructs a new AccountOnboardingApi. 
    * @alias module:api/AccountOnboardingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the onboardingRouterCreateUnlockTicket operation.
     * @callback module:api/AccountOnboardingApi~onboardingRouterCreateUnlockTicketCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates unlock ticket on hubspot
     * @param {String} xAccountApiKey Account API Key
     * @param {module:model/ModelsAccountUnlockTicket} body Content values for creating ticket
     * @param {module:api/AccountOnboardingApi~onboardingRouterCreateUnlockTicketCallback} callback The callback function, accepting three arguments: error, data, response
     */
    onboardingRouterCreateUnlockTicket(xAccountApiKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling onboardingRouterCreateUnlockTicket");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling onboardingRouterCreateUnlockTicket");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/onboarding/unlockticket', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the onboardingRouterGetOnboardingChecklist operation.
     * @callback module:api/AccountOnboardingApi~onboardingRouterGetOnboardingChecklistCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsOnboardingChecklist} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets Onboarding Checklist data for account if not present creates a default entry
     * @param {String} xAccountApiKey Account API Key
     * @param {module:api/AccountOnboardingApi~onboardingRouterGetOnboardingChecklistCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsOnboardingChecklist}
     */
    onboardingRouterGetOnboardingChecklist(xAccountApiKey, callback) {
      let postBody = null;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling onboardingRouterGetOnboardingChecklist");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelsOnboardingChecklist;
      return this.apiClient.callApi(
        '/account/onboarding/checklist', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the onboardingRouterSendOnboardingWelcomeEmail operation.
     * @callback module:api/AccountOnboardingApi~onboardingRouterSendOnboardingWelcomeEmailCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sends welcome email for a newly registered account
     * @param {String} xAccountApiKey Account API Key
     * @param {module:api/AccountOnboardingApi~onboardingRouterSendOnboardingWelcomeEmailCallback} callback The callback function, accepting three arguments: error, data, response
     */
    onboardingRouterSendOnboardingWelcomeEmail(xAccountApiKey, callback) {
      let postBody = null;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling onboardingRouterSendOnboardingWelcomeEmail");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/onboarding/welcome', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
