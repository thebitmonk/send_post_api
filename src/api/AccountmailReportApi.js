/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ModelsCreateMailReport from '../model/ModelsCreateMailReport';
import ModelsMailReportResult from '../model/ModelsMailReportResult';
import ModelsProviderResult from '../model/ModelsProviderResult';

/**
* AccountMailReport service.
* @module api/AccountMailReportApi
* @version 1.0.0
*/
export default class AccountMailReportApi {

    /**
    * Constructs a new AccountMailReportApi. 
    * @alias module:api/AccountMailReportApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the mailReportRouterMailReport operation.
     * @callback module:api/AccountMailReportApi~mailReportRouterMailReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsMailReportResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get reputation of domain
     * @param {String} xAccountApiKey Account API Key
     * @param {module:model/ModelsCreateMailReport} body The IP Email Provider Settings
     * @param {module:api/AccountMailReportApi~mailReportRouterMailReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsMailReportResult}
     */
    mailReportRouterMailReport(xAccountApiKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling mailReportRouterMailReport");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling mailReportRouterMailReport");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelsMailReportResult;
      return this.apiClient.callApi(
        '/account/mailReport/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mailReportRouterMailReportGetSingleReport operation.
     * @callback module:api/AccountMailReportApi~mailReportRouterMailReportGetSingleReportCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get Providers available
     * @param {String} xAccountApiKey Account API Key
     * @param {Number} reportId the report id you want to get
     * @param {module:api/AccountMailReportApi~mailReportRouterMailReportGetSingleReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    mailReportRouterMailReportGetSingleReport(xAccountApiKey, reportId, callback) {
      let postBody = null;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling mailReportRouterMailReportGetSingleReport");
      }
      // verify the required parameter 'reportId' is set
      if (reportId === undefined || reportId === null) {
        throw new Error("Missing the required parameter 'reportId' when calling mailReportRouterMailReportGetSingleReport");
      }

      let pathParams = {
        'reportId': reportId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/account/mailReport/{reportId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mailReportRouterMailReportProviders operation.
     * @callback module:api/AccountMailReportApi~mailReportRouterMailReportProvidersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsProviderResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get Providers available
     * @param {String} xAccountApiKey Account API Key
     * @param {module:api/AccountMailReportApi~mailReportRouterMailReportProvidersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsProviderResult}
     */
    mailReportRouterMailReportProviders(xAccountApiKey, callback) {
      let postBody = null;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling mailReportRouterMailReportProviders");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelsProviderResult;
      return this.apiClient.callApi(
        '/account/mailReport/provider', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
