/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ModelsEmailMessage from '../model/ModelsEmailMessage';
import ModelsEmailResponse from '../model/ModelsEmailResponse';

/**
* SubaccountEmail service.
* @module api/SubaccountEmailApi
* @version 1.0.0
*/
export default class SubaccountEmailApi {

    /**
    * Constructs a new SubaccountEmailApi. 
    * @alias module:api/SubaccountEmailApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the emailRouterSendEmail operation.
     * @callback module:api/SubaccountEmailApi~emailRouterSendEmailCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ModelsEmailResponse>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Send Email To Contacts
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {module:model/ModelsEmailMessage} body The Email Message
     * @param {Object} opts Optional parameters
     * @param {Boolean} [xSendPostMockEmail] Mock email header
     * @param {String} [xSendPostMockTimeShift] Mock email time shift
     * @param {module:api/SubaccountEmailApi~emailRouterSendEmailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ModelsEmailResponse>}
     */
    emailRouterSendEmail(xSubAccountApiKey, body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling emailRouterSendEmail");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling emailRouterSendEmail");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey,
        'X-SendPost-Mock-Email': opts['xSendPostMockEmail'],
        'X-SendPost-Mock-Time-Shift': opts['xSendPostMockTimeShift']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [ModelsEmailResponse];
      return this.apiClient.callApi(
        '/subaccount/email/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the emailRouterSendEmailWithTemplate operation.
     * @callback module:api/SubaccountEmailApi~emailRouterSendEmailWithTemplateCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ModelsEmailResponse>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Send Email To Contacts With Template
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {module:model/ModelsEmailMessage} body The Email Message
     * @param {module:api/SubaccountEmailApi~emailRouterSendEmailWithTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ModelsEmailResponse>}
     */
    emailRouterSendEmailWithTemplate(xSubAccountApiKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling emailRouterSendEmailWithTemplate");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling emailRouterSendEmailWithTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [ModelsEmailResponse];
      return this.apiClient.callApi(
        '/subaccount/email/template', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
