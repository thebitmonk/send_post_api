/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ModelsCountStat from '../model/ModelsCountStat';
import ModelsDeleteResponse from '../model/ModelsDeleteResponse';
import ModelsRDSuppression from '../model/ModelsRDSuppression';
import ModelsRSuppression from '../model/ModelsRSuppression';
import ModelsSuppression from '../model/ModelsSuppression';

/**
* SubaccountSuppression service.
* @module api/SubaccountSuppressionApi
* @version 1.0.0
*/
export default class SubaccountSuppressionApi {

    /**
    * Constructs a new SubaccountSuppressionApi. 
    * @alias module:api/SubaccountSuppressionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the suppressionRouterCount operation.
     * @callback module:api/SubaccountSuppressionApi~suppressionRouterCountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsCountStat} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Count Total Suppressions
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {Object} opts Optional parameters
     * @param {String} [from] from date
     * @param {String} [to] to date
     * @param {module:api/SubaccountSuppressionApi~suppressionRouterCountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsCountStat}
     */
    suppressionRouterCount(xSubAccountApiKey, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling suppressionRouterCount");
      }

      let pathParams = {
      };
      let queryParams = {
        'from': opts['from'],
        'to': opts['to']
      };
      let headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelsCountStat;
      return this.apiClient.callApi(
        '/subaccount/suppression/count', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the suppressionRouterCreateSuppressions operation.
     * @callback module:api/SubaccountSuppressionApi~suppressionRouterCreateSuppressionsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ModelsSuppression>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add Email Addresses To Suppression List
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {module:model/ModelsRSuppression} body Suppression content
     * @param {module:api/SubaccountSuppressionApi~suppressionRouterCreateSuppressionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ModelsSuppression>}
     */
    suppressionRouterCreateSuppressions(xSubAccountApiKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling suppressionRouterCreateSuppressions");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling suppressionRouterCreateSuppressions");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [ModelsSuppression];
      return this.apiClient.callApi(
        '/subaccount/suppression/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the suppressionRouterCreateSuppressionsInSuppressionFilter operation.
     * @callback module:api/SubaccountSuppressionApi~suppressionRouterCreateSuppressionsInSuppressionFilterCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add Email Addresses To Suppression Filter
     * @param {module:model/ModelsSuppression} body Add suppressions to suppression filter
     * @param {module:api/SubaccountSuppressionApi~suppressionRouterCreateSuppressionsInSuppressionFilterCallback} callback The callback function, accepting three arguments: error, data, response
     */
    suppressionRouterCreateSuppressionsInSuppressionFilter(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling suppressionRouterCreateSuppressionsInSuppressionFilter");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subaccount/suppression/filter', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the suppressionRouterDeleteSuppression operation.
     * @callback module:api/SubaccountSuppressionApi~suppressionRouterDeleteSuppressionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ModelsDeleteResponse>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete specific emails which are in suppression list
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {module:model/ModelsRDSuppression} body Suppression content
     * @param {module:api/SubaccountSuppressionApi~suppressionRouterDeleteSuppressionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ModelsDeleteResponse>}
     */
    suppressionRouterDeleteSuppression(xSubAccountApiKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling suppressionRouterDeleteSuppression");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling suppressionRouterDeleteSuppression");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [ModelsDeleteResponse];
      return this.apiClient.callApi(
        '/subaccount/suppression/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the suppressionRouterDeleteSuppressionsInSuppressionFilter operation.
     * @callback module:api/SubaccountSuppressionApi~suppressionRouterDeleteSuppressionsInSuppressionFilterCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete specific emails which are in suppression list
     * @param {module:model/ModelsSuppression} body Suppression content
     * @param {module:api/SubaccountSuppressionApi~suppressionRouterDeleteSuppressionsInSuppressionFilterCallback} callback The callback function, accepting three arguments: error, data, response
     */
    suppressionRouterDeleteSuppressionsInSuppressionFilter(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling suppressionRouterDeleteSuppressionsInSuppressionFilter");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subaccount/suppression/filter', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the suppressionRouterExportAllSuppressions operation.
     * @callback module:api/SubaccountSuppressionApi~suppressionRouterExportAllSuppressionsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Export all suppressions
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {Object} opts Optional parameters
     * @param {String} [from] from date
     * @param {String} [to] to date
     * @param {String} [email] member email
     * @param {module:api/SubaccountSuppressionApi~suppressionRouterExportAllSuppressionsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    suppressionRouterExportAllSuppressions(xSubAccountApiKey, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling suppressionRouterExportAllSuppressions");
      }

      let pathParams = {
      };
      let queryParams = {
        'from': opts['from'],
        'to': opts['to'],
        'email': opts['email']
      };
      let headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/subaccount/suppression/export', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the suppressionRouterGetAllSuppressions operation.
     * @callback module:api/SubaccountSuppressionApi~suppressionRouterGetAllSuppressionsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ModelsSuppression>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all suppressions
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {Object} opts Optional parameters
     * @param {Number} [offset] offset
     * @param {Number} [limit] limit
     * @param {String} [search] search
     * @param {String} [from] from date
     * @param {String} [to] to date
     * @param {module:api/SubaccountSuppressionApi~suppressionRouterGetAllSuppressionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ModelsSuppression>}
     */
    suppressionRouterGetAllSuppressions(xSubAccountApiKey, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling suppressionRouterGetAllSuppressions");
      }

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'search': opts['search'],
        'from': opts['from'],
        'to': opts['to']
      };
      let headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ModelsSuppression];
      return this.apiClient.callApi(
        '/subaccount/suppression/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
