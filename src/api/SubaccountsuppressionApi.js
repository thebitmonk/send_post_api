/*
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.41
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {ModelsCountStat} from '../model/ModelsCountStat';
import {ModelsRDSuppression} from '../model/ModelsRDSuppression';
import {ModelsRSuppression} from '../model/ModelsRSuppression';
import {ModelsSuppression} from '../model/ModelsSuppression';

/**
* Subaccountsuppression service.
* @module api/SubaccountsuppressionApi
* @version 1.0.0
*/
export class SubaccountsuppressionApi {

    /**
    * Constructs a new SubaccountsuppressionApi. 
    * @alias module:api/SubaccountsuppressionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the suppressionRouterCount operation.
     * @callback moduleapi/SubaccountsuppressionApi~suppressionRouterCountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsCountStat{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Count Total Suppressions
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {Object} opts Optional parameters
     * @param {String} opts.from from date
     * @param {String} opts.to to date
     * @param {module:api/SubaccountsuppressionApi~suppressionRouterCountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    suppressionRouterCount(xSubAccountApiKey, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling suppressionRouterCount");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'from': opts['from'],'to': opts['to']
      };
      let headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelsCountStat;

      return this.apiClient.callApi(
        '/subaccount/suppression/count', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the suppressionRouterCreateSuppressions operation.
     * @callback moduleapi/SubaccountsuppressionApi~suppressionRouterCreateSuppressionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsSuppression{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add Email Addresses To Suppression List
     * @param {module:model/ModelsRSuppression} body Suppression content
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {module:api/SubaccountsuppressionApi~suppressionRouterCreateSuppressionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    suppressionRouterCreateSuppressions(body, xSubAccountApiKey, callback) {
      
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling suppressionRouterCreateSuppressions");
      }
      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling suppressionRouterCreateSuppressions");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelsSuppression;

      return this.apiClient.callApi(
        '/subaccount/suppression/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the suppressionRouterCreateSuppressionsInSuppressionFilter operation.
     * @callback moduleapi/SubaccountsuppressionApi~suppressionRouterCreateSuppressionsInSuppressionFilterCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add Email Addresses To Suppression Filter
     * @param {module:model/ModelsSuppression} body Add suppressions to suppression filter
     * @param {module:api/SubaccountsuppressionApi~suppressionRouterCreateSuppressionsInSuppressionFilterCallback} callback The callback function, accepting three arguments: error, data, response
     */
    suppressionRouterCreateSuppressionsInSuppressionFilter(body, callback) {
      
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling suppressionRouterCreateSuppressionsInSuppressionFilter");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/subaccount/suppression/filter', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the suppressionRouterDeleteSuppression operation.
     * @callback moduleapi/SubaccountsuppressionApi~suppressionRouterDeleteSuppressionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsSuppression{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete specific emails which are in suppression list
     * @param {module:model/ModelsRDSuppression} body Suppression content
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {module:api/SubaccountsuppressionApi~suppressionRouterDeleteSuppressionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    suppressionRouterDeleteSuppression(body, xSubAccountApiKey, callback) {
      
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling suppressionRouterDeleteSuppression");
      }
      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling suppressionRouterDeleteSuppression");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelsSuppression;

      return this.apiClient.callApi(
        '/subaccount/suppression/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the suppressionRouterDeleteSuppressionsInSuppressionFilter operation.
     * @callback moduleapi/SubaccountsuppressionApi~suppressionRouterDeleteSuppressionsInSuppressionFilterCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete specific emails which are in suppression list
     * @param {module:model/ModelsSuppression} body Suppression content
     * @param {module:api/SubaccountsuppressionApi~suppressionRouterDeleteSuppressionsInSuppressionFilterCallback} callback The callback function, accepting three arguments: error, data, response
     */
    suppressionRouterDeleteSuppressionsInSuppressionFilter(body, callback) {
      
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling suppressionRouterDeleteSuppressionsInSuppressionFilter");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/subaccount/suppression/filter', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the suppressionRouterGetAllSuppressions operation.
     * @callback moduleapi/SubaccountsuppressionApi~suppressionRouterGetAllSuppressionsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ModelsSuppression>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all suppressions
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {Object} opts Optional parameters
     * @param {Number} opts.offset offset
     * @param {Number} opts.limit limit
     * @param {String} opts.search search
     * @param {String} opts.from from date
     * @param {String} opts.to to date
     * @param {module:api/SubaccountsuppressionApi~suppressionRouterGetAllSuppressionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    suppressionRouterGetAllSuppressions(xSubAccountApiKey, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling suppressionRouterGetAllSuppressions");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'offset': opts['offset'],'limit': opts['limit'],'search': opts['search'],'from': opts['from'],'to': opts['to']
      };
      let headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ModelsSuppression];

      return this.apiClient.callApi(
        '/subaccount/suppression/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}