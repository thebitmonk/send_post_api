/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ModelsWMessage from '../model/ModelsWMessage';

/**
* Smtp service.
* @module api/SmtpApi
* @version 1.0.0
*/
export default class SmtpApi {

    /**
    * Constructs a new SmtpApi. 
    * @alias module:api/SmtpApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the sMTPRouterReceiveWebhooksRaisedFromSMTPServers operation.
     * @callback module:api/SmtpApi~sMTPRouterReceiveWebhooksRaisedFromSMTPServersCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Receive webhooks raised from SMTP servers
     * @param {module:model/ModelsWMessage} body The Webhook content
     * @param {module:api/SmtpApi~sMTPRouterReceiveWebhooksRaisedFromSMTPServersCallback} callback The callback function, accepting three arguments: error, data, response
     */
    sMTPRouterReceiveWebhooksRaisedFromSMTPServers(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling sMTPRouterReceiveWebhooksRaisedFromSMTPServers");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/smtp/webhook', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
