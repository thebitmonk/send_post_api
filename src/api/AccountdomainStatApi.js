/*
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.41
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {ModelsStat} from '../model/ModelsStat';

/**
* AccountdomainStat service.
* @module api/AccountdomainStatApi
* @version 1.0.0
*/
export class AccountdomainStatApi {

    /**
    * Constructs a new AccountdomainStatApi. 
    * @alias module:api/AccountdomainStatApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the domainStatRouterGetAllAggregateDomainStatsByGroup operation.
     * @callback moduleapi/AccountdomainStatApi~domainStatRouterGetAllAggregateDomainStatsByGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsStat{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get All Aggregate Stats by Group
     * @param {String} xAccountApiKey Account API Key
     * @param {Number} domainId the domainName you want to get
     * @param {String} provider the group whose stats you want
     * @param {Object} opts Optional parameters
     * @param {String} opts.from from date
     * @param {String} opts.to to date
     * @param {module:api/AccountdomainStatApi~domainStatRouterGetAllAggregateDomainStatsByGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    domainStatRouterGetAllAggregateDomainStatsByGroup(xAccountApiKey, domainId, provider, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling domainStatRouterGetAllAggregateDomainStatsByGroup");
      }
      // verify the required parameter 'domainId' is set
      if (domainId === undefined || domainId === null) {
        throw new Error("Missing the required parameter 'domainId' when calling domainStatRouterGetAllAggregateDomainStatsByGroup");
      }
      // verify the required parameter 'provider' is set
      if (provider === undefined || provider === null) {
        throw new Error("Missing the required parameter 'provider' when calling domainStatRouterGetAllAggregateDomainStatsByGroup");
      }

      let pathParams = {
        'domainId': domainId
      };
      let queryParams = {
        'from': opts['from'],'to': opts['to'],'provider': provider
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelsStat;

      return this.apiClient.callApi(
        '/account/domainStat/{domainId}/aggregate/provider', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the domainStatRouterGetStatsForASingleDomainStats operation.
     * @callback moduleapi/AccountdomainStatApi~domainStatRouterGetStatsForASingleDomainStatsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsStat{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get All Aggregate Stats
     * @param {String} xAccountApiKey Account API Key
     * @param {String} domainId the domainID you want to get
     * @param {Object} opts Optional parameters
     * @param {String} opts.from from date
     * @param {String} opts.to to date
     * @param {module:api/AccountdomainStatApi~domainStatRouterGetStatsForASingleDomainStatsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    domainStatRouterGetStatsForASingleDomainStats(xAccountApiKey, domainId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling domainStatRouterGetStatsForASingleDomainStats");
      }
      // verify the required parameter 'domainId' is set
      if (domainId === undefined || domainId === null) {
        throw new Error("Missing the required parameter 'domainId' when calling domainStatRouterGetStatsForASingleDomainStats");
      }

      let pathParams = {
        'domainId': domainId
      };
      let queryParams = {
        'from': opts['from'],'to': opts['to']
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelsStat;

      return this.apiClient.callApi(
        '/account/domainStat/{domainId}/aggregate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}