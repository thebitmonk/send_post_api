/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ModelsCountStat from '../model/ModelsCountStat';
import ModelsDeleteResponse from '../model/ModelsDeleteResponse';
import ModelsESubAccount from '../model/ModelsESubAccount';
import ModelsIncident from '../model/ModelsIncident';
import ModelsSubAccount from '../model/ModelsSubAccount';

/**
* AccountSubaccount service.
* @module api/AccountSubaccountApi
* @version 1.0.0
*/
export default class AccountSubaccountApi {

    /**
    * Constructs a new AccountSubaccountApi. 
    * @alias module:api/AccountSubaccountApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the subAccountRouterCount operation.
     * @callback module:api/AccountSubaccountApi~subAccountRouterCountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsCountStat} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Count Total Subaccounts
     * @param {String} xAccountApiKey Account API Key
     * @param {Object} opts Optional parameters
     * @param {String} [filterBy] filterBy
     * @param {Number} [filterValue] filterValue
     * @param {String} [search] search term
     * @param {module:api/AccountSubaccountApi~subAccountRouterCountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsCountStat}
     */
    subAccountRouterCount(xAccountApiKey, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling subAccountRouterCount");
      }

      let pathParams = {
      };
      let queryParams = {
        'filterBy': opts['filterBy'],
        'filterValue': opts['filterValue'],
        'search': opts['search']
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelsCountStat;
      return this.apiClient.callApi(
        '/account/subaccount/count', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subAccountRouterCreate operation.
     * @callback module:api/AccountSubaccountApi~subAccountRouterCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsSubAccount} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create SubAccount
     * @param {String} xAccountApiKey Account API Key
     * @param {module:model/ModelsESubAccount} body The SubAccount content
     * @param {module:api/AccountSubaccountApi~subAccountRouterCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsSubAccount}
     */
    subAccountRouterCreate(xAccountApiKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling subAccountRouterCreate");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling subAccountRouterCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelsSubAccount;
      return this.apiClient.callApi(
        '/account/subaccount/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subAccountRouterDelete operation.
     * @callback module:api/AccountSubaccountApi~subAccountRouterDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsDeleteResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete SubAccount
     * @param {String} xAccountApiKey Account API Key
     * @param {Number} subAccountId The SubAccountId you want to delete
     * @param {module:api/AccountSubaccountApi~subAccountRouterDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsDeleteResponse}
     */
    subAccountRouterDelete(xAccountApiKey, subAccountId, callback) {
      let postBody = null;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling subAccountRouterDelete");
      }
      // verify the required parameter 'subAccountId' is set
      if (subAccountId === undefined || subAccountId === null) {
        throw new Error("Missing the required parameter 'subAccountId' when calling subAccountRouterDelete");
      }

      let pathParams = {
        'subAccountId': subAccountId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelsDeleteResponse;
      return this.apiClient.callApi(
        '/account/subaccount/{subAccountId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subAccountRouterGet operation.
     * @callback module:api/AccountSubaccountApi~subAccountRouterGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsSubAccount} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find SubAccount by SubAccountId
     * @param {String} xAccountApiKey Account API Key
     * @param {Number} subAccountId the SubAccountId you want to get
     * @param {module:api/AccountSubaccountApi~subAccountRouterGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsSubAccount}
     */
    subAccountRouterGet(xAccountApiKey, subAccountId, callback) {
      let postBody = null;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling subAccountRouterGet");
      }
      // verify the required parameter 'subAccountId' is set
      if (subAccountId === undefined || subAccountId === null) {
        throw new Error("Missing the required parameter 'subAccountId' when calling subAccountRouterGet");
      }

      let pathParams = {
        'subAccountId': subAccountId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelsSubAccount;
      return this.apiClient.callApi(
        '/account/subaccount/{subAccountId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subAccountRouterGetAll operation.
     * @callback module:api/AccountSubaccountApi~subAccountRouterGetAllCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ModelsSubAccount>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get All SubAccounts
     * @param {String} xAccountApiKey Account API Key
     * @param {Object} opts Optional parameters
     * @param {Number} [offset] offset
     * @param {Number} [limit] limit
     * @param {String} [filterBy] filterBy
     * @param {Number} [filterValue] filterValue
     * @param {String} [search] search term
     * @param {module:api/AccountSubaccountApi~subAccountRouterGetAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ModelsSubAccount>}
     */
    subAccountRouterGetAll(xAccountApiKey, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling subAccountRouterGetAll");
      }

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'filterBy': opts['filterBy'],
        'filterValue': opts['filterValue'],
        'search': opts['search']
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ModelsSubAccount];
      return this.apiClient.callApi(
        '/account/subaccount/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subAccountRouterGetAllSubAccountIncidents operation.
     * @callback module:api/AccountSubaccountApi~subAccountRouterGetAllSubAccountIncidentsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ModelsIncident>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get All Incidents associated with a sub-account
     * @param {String} xAccountApiKey Account API Key
     * @param {Number} subAccountId The SubAccountId you want to delete
     * @param {module:api/AccountSubaccountApi~subAccountRouterGetAllSubAccountIncidentsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ModelsIncident>}
     */
    subAccountRouterGetAllSubAccountIncidents(xAccountApiKey, subAccountId, callback) {
      let postBody = null;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling subAccountRouterGetAllSubAccountIncidents");
      }
      // verify the required parameter 'subAccountId' is set
      if (subAccountId === undefined || subAccountId === null) {
        throw new Error("Missing the required parameter 'subAccountId' when calling subAccountRouterGetAllSubAccountIncidents");
      }

      let pathParams = {
        'subAccountId': subAccountId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ModelsIncident];
      return this.apiClient.callApi(
        '/account/subaccount/{subAccountId}/incident', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the subAccountRouterUpdate operation.
     * @callback module:api/AccountSubaccountApi~subAccountRouterUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsSubAccount} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update SubAccount
     * @param {String} xAccountApiKey Account API Key
     * @param {Number} subAccountId The SubAccountId you want to update
     * @param {module:model/ModelsESubAccount} body The body
     * @param {module:api/AccountSubaccountApi~subAccountRouterUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsSubAccount}
     */
    subAccountRouterUpdate(xAccountApiKey, subAccountId, body, callback) {
      let postBody = body;
      // verify the required parameter 'xAccountApiKey' is set
      if (xAccountApiKey === undefined || xAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xAccountApiKey' when calling subAccountRouterUpdate");
      }
      // verify the required parameter 'subAccountId' is set
      if (subAccountId === undefined || subAccountId === null) {
        throw new Error("Missing the required parameter 'subAccountId' when calling subAccountRouterUpdate");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling subAccountRouterUpdate");
      }

      let pathParams = {
        'subAccountId': subAccountId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Account-ApiKey': xAccountApiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ModelsSubAccount;
      return this.apiClient.callApi(
        '/account/subaccount/{subAccountId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
