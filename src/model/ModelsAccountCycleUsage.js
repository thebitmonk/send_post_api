/**
 * SendPost API
 * Email API and SMTP relay to not just send and measure email sending, but also alert and optimise. We provide you with tools, expertise and support needed to reliably deliver emails to your customers inboxes on time, every time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendpost.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelsAccountCycleUsage model module.
 * @module model/ModelsAccountCycleUsage
 * @version 1.0.0
 */
class ModelsAccountCycleUsage {
    /**
     * Constructs a new <code>ModelsAccountCycleUsage</code>.
     * @alias module:model/ModelsAccountCycleUsage
     */
    constructor() { 
        
        ModelsAccountCycleUsage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModelsAccountCycleUsage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelsAccountCycleUsage} obj Optional instance to populate.
     * @return {module:model/ModelsAccountCycleUsage} The populated <code>ModelsAccountCycleUsage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelsAccountCycleUsage();

            if (data.hasOwnProperty('processed')) {
                obj['processed'] = ApiClient.convertToType(data['processed'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelsAccountCycleUsage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelsAccountCycleUsage</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} processed
 */
ModelsAccountCycleUsage.prototype['processed'] = undefined;






export default ModelsAccountCycleUsage;

